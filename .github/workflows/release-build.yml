on:
  workflow_dispatch:
  push:
    branches:
      - linux-cpu-static
#  schedule:
#    - cron: '0 20 * * *'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
    - name: Get today's date
      run: echo "TODAY=$(date +'%Y%m%d')" >> $GITHUB_ENV
    - name: Create release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TODAY }}
        release_name: XLA nightly ${{ env.TODAY }}
        body: "XLA nightly ${{ env.TODAY }}"
  linux-cpu-static:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
    - name: Build XLA static Linux CPU
      run: |
        sudo apt install clang
        git clone https://github.com/openxla/xla
        cd xla
        curl -fL https://github.com/bazelbuild/bazelisk/releases/download/v1.19.0/bazelisk-linux-amd64 > bazelisk
        chmod +x bazelisk
        bazel build --test_output=all --spawn_strategy=sandboxed //xla/...
        tar cfz everything.tar.gz .
    - name: Publish build
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: everything.tar.gz
        asset_name: everything.tar.gz
        asset_content_type: application/gzip
